---
- name: Include base setup tasks
  ansible.builtin.import_tasks: tasks/base_setup.yml

- name: Ensure 'keystone' database exists (via Unix socket with sudo)
  community.mysql.mysql_db:
    name: keystone
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create 'keystone'@'localhost' user with full privileges
  community.mysql.mysql_user:
    name: keystone
    host: localhost
    password: "KEYSTONE_DBPASS"
    priv: "keystone.*:ALL"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create 'keystone'@'%' user with full privileges
  community.mysql.mysql_user:
    name: keystone
    host: "%"
    password: "KEYSTONE_DBPASS"
    priv: "keystone.*:ALL"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
- name: Install Keystone
  apt:
    name: keystone
    state: present

- name: Set Keystone database connection string
  ansible.builtin.ini_file:
    path: /etc/keystone/keystone.conf
    section: database
    option: connection
    value: "mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone"
    mode: '0640'
    backup: yes

- name: Set Keystone token provider to fernet
  ansible.builtin.ini_file:
    path: /etc/keystone/keystone.conf
    section: token
    option: provider
    value: "fernet"
    mode: '0640'
    backup: yes

- name: Run keystone-manage db_sync using sudo
  ansible.builtin.command: sudo keystone-manage db_sync
  become: true

- name: Initialize Fernet key repositories
  ansible.builtin.shell: |
    sudo keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
    sudo keystone-manage credential_setup --keystone-user keystone --keystone-group keystone
  become: true

- name: Bootstrap the Keystone service
  ansible.builtin.shell: |
    sudo keystone-manage bootstrap \
      --bootstrap-password ADMIN_PASS \
      --bootstrap-admin-url http://controller:35357/v3/ \
      --bootstrap-internal-url http://controller:5000/v3/ \
      --bootstrap-public-url http://controller:5000/v3/ \
      --bootstrap-region-id RegionOne
  become: true

- name: Ensure 'ServerName controller' is set in apache2.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/apache2.conf
    line: ServerName controller
    insertafter: EOF
    state: present
  become: true

- name: Restart Apache2 service
  ansible.builtin.service:
    name: apache2
    state: restarted
  become: true

- name: Example command using OpenStack admin credentials
  ansible.builtin.shell: openstack user list
  become: true
  environment:
    OS_USERNAME: admin
    OS_PASSWORD: ADMIN_PASS
    OS_PROJECT_NAME: admin
    OS_USER_DOMAIN_NAME: Default
    OS_PROJECT_DOMAIN_NAME: Default
    OS_AUTH_URL: http://controller:35357/v3
    OS_IDENTITY_API_VERSION: "3"