---
- name: Install nova-compute package
  ansible.builtin.apt:
    name: nova-compute
    state: present
    update_cache: yes

- name: Configure RabbitMQ transport URL
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: DEFAULT
    option: transport_url
    value: "rabbit://openstack:{{ rabbit_pass }}@controller"
    backup: yes

- name: Set Identity service auth strategy
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: api
    option: auth_strategy
    value: keystone
    backup: yes

- name: Configure Keystone token middleware
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: keystone_authtoken
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    backup: yes
  loop:
    - { option: www_authenticate_uri, value: http://controller:5000/ }
    - { option: auth_url,             value: http://controller:5000/ }
    - { option: memcached_servers,    value: controller:11211 }
    - { option: auth_type,            value: password }
    - { option: project_domain_name,  value: Default }
    - { option: user_domain_name,     value: Default }
    - { option: project_name,         value: service }
    - { option: username,             value: nova }
    - { option: password,             value: "{{ nova_pass }}" }

- name: Enable serviceâ€‘user tokens for nova
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: service_user
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    backup: yes
  loop:
    - { option: send_service_user_token, value: "true" }
    - { option: auth_url,                value: http://controller:5000/ }
    - { option: auth_strategy,           value: keystone }
    - { option: auth_type,               value: password }
    - { option: project_domain_name,     value: Default }
    - { option: project_name,            value: service }
    - { option: user_domain_name,        value: Default }
    - { option: username,                value: nova }
    - { option: password,                value: "{{ nova_pass }}" }

- name: Set management interface IP
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: DEFAULT
    option: my_ip
    value: "{{ management_ip }}"
    backup: yes

- name: Configure networking integration for Neutron
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: neutron
    option: use_neutron
    value: "True"
    backup: yes

- name: Configure VNC console access
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: vnc
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    backup: yes
  loop:
    - { option: enabled,                    value: "true" }
    - { option: server_listen,              value: "0.0.0.0" }
    - { option: server_proxyclient_address, value: "{{ management_ip }}" }
    - { option: novncproxy_base_url,        value: http://controller:6080/vnc_auto.html }

- name: Configure Glance image service endpoint
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: glance
    option: api_servers
    value: http://controller:9292
    backup: yes

- name: Configure oslo_concurrency lock path
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: oslo_concurrency
    option: lock_path
    value: /var/lib/nova/tmp
    backup: yes

- name: Configure Placement API access
  ansible.builtin.ini_file:
    path: /etc/nova/nova.conf
    section: placement
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    backup: yes
  loop:
    - { option: region_name,           value: RegionOne }
    - { option: project_domain_name,  value: Default   }
    - { option: project_name,         value: service   }
    - { option: auth_type,            value: password  }
    - { option: user_domain_name,     value: Default   }
    - { option: auth_url,             value: http://controller:5000/v3 }
    - { option: username,             value: placement }
    - { option: password,             value: "{{ placement_service_password }}" }

- name: Check for CPU hardware acceleration
  ansible.builtin.command: egrep -c '(vmx|svm)' /proc/cpuinfo
  register: accel
  changed_when: false
  failed_when: false

- name: Fallback to QEMU if no acceleration
  ansible.builtin.ini_file:
    path: /etc/nova/nova-compute.conf
    section: libvirt
    option: virt_type
    value: qemu
    backup: yes
  when: accel.stdout|int == 0
 
- name: Restart nova-compute service
  ansible.builtin.service:
    name: nova-compute
    state: restarted
