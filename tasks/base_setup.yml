---
- name: Update APT package index
  apt:
    update_cache: yes
    cache_valid_time: 36000

- name: Install core packages (system essentials and tools)
  apt:
    name:
      - git
      - sudo
      - net-tools
      - curl
      - build-essential
      - python3-dev
      - libpython3-dev
      - python3-setuptools
      - libffi-dev
      - libxslt1-dev
      - libxml2-dev
      - libyaml-dev
      - libssl-dev
      - zlib1g-dev
      - mariadb-client
      - libmariadb-dev
    state: present

- name: Install OpenStack and related services packages
  apt:
    name:
      - python3-openstackclient
      - mariadb-server
      - rabbitmq-server
      - memcached
      - etcd
      - chrony
      - crudini
      - net-tools
      - apache2
      - libapache2-mod-wsgi-py3
    state: present

- name: Ensure MariaDB is installed (redundant check for idempotence)
  apt:
    name: mariadb-server
    state: present

- name: Ensure python3-pip is installed
  apt:
    name: python3-pip
    state: present

- name: Download get-pip.py
  ansible.builtin.get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: /tmp/get-pip.py
    mode: "0755"
  register: download_getpip

- name: Install pip version 25.0.1 using get-pip.py
  ansible.builtin.command: python3 /tmp/get-pip.py pip==25.0.1
  args:
    creates: /usr/local/bin/pip
  become: true
  register: pip_install_result
  changed_when: "'Successfully installed pip' in pip_install_result.stdout or pip_install_result.rc == 0"

- name: Remove get-pip.py after installation
  ansible.builtin.file:
    path: /tmp/get-pip.py
    state: absent

- name: Ensure PyMySQL is installed for Ansible MySQL modules
  ansible.builtin.pip:
    name: PyMySQL
    executable: pip3
  become: true

- name: Install virtualenv locally for the non-root user
  ansible.builtin.pip:
    name: virtualenv
    executable: pip3
    extra_args: --user
  become: false

- name: Re-install build and Python3 dependencies (if not already present)
  apt:
    name:
      - build-essential
      - python3-dev
      - libpython3-dev
      - python3-setuptools
      - python3-pip
      - libffi-dev
      - libxslt1-dev
      - libxml2-dev
      - libyaml-dev
      - libssl-dev
      - zlib1g-dev
      - mariadb-client     
      - libmariadb-dev      
      - git
    state: present
    update_cache: yes
  become: true


- name: Add controller entry in /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^0\.0\.0\.0\s+controller\b'
    line: '0.0.0.0 controller'
    state: present
  become: true


- name : Create symbolic link for python3
  ansible.builtin.file:
    src: /usr/bin/python3
    dest: /usr/bin/python
    state: link
  become: true

- name: Create admin-openrc file for OpenStack CLI
  ansible.builtin.copy:
    dest: /root/admin-openrc
    content: |
      export OS_PROJECT_DOMAIN_NAME="{{ os_project_domain_name }}"
      export OS_USER_DOMAIN_NAME="{{ os_user_domain_name }}"
      export OS_PROJECT_NAME="{{ os_project_name }}"
      export OS_USERNAME="{{ os_admin_user }}"
      export OS_PASSWORD={{ os_admin_password }}
      export OS_AUTH_URL="{{ os_auth_url }}"
      export OS_IDENTITY_API_VERSION="{{ os_identity_api_version }}"
      export OS_IMAGE_API_VERSION={{ os_image_api_version }}
      export OS_REGION_NAME="{{ os_region_name }}"
      export OS_INTERFACE="{{ os_interface }}"
      export OS_SERVICE_PROJECT_NAME="{{ os_service_project_name }}"
      export OS_AUTH_TYPE=password
    owner: root
    group: root
    mode: '0600'
  become: true


- name: Pre-seed dash so it will NOT be used as /bin/sh
  ansible.builtin.debconf:
    name: dash
    question: dash/sh
    vtype: boolean
    value: false
  become: true

- name: Ensure dash is installed (so our preseeding applies)
  ansible.builtin.apt:
    name: dash
    state: present
    update_cache: yes
  become: true

- name: Reconfigure dash nonâ€‘interactively
  ansible.builtin.command: dpkg-reconfigure dash -f noninteractive
  become: true


- name: Check if RabbitMQ user exists
  ansible.builtin.command:
    cmd: rabbitmqctl list_users
  register: rmq_users
  changed_when: false

- name: Add RabbitMQ user if missing
  ansible.builtin.command:
    cmd: rabbitmqctl add_user {{ rabbitmq_user }} {{ rabbit_pass }}
  when: "'{{ rabbitmq_user }}' not in rmq_users.stdout"

- name: Grant full permissions on '/' vhost
  ansible.builtin.command:
    cmd: rabbitmqctl set_permissions -p / {{ rabbitmq_user }} '.*' '.*' '.*'