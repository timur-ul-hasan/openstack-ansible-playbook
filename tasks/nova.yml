---
- name: Include base setup tasks
  ansible.builtin.import_tasks: tasks/base_setup.yml

- name: Create virtualenv for Nova with system site packages
  ansible.builtin.command: python3 -m virtualenv --system-site-packages nova_env
  args:
    chdir: /home/vagrant
  become: false

- name: Debug nova virtualenv activate location
  ansible.builtin.debug:
    msg: "To activate the nova virtualenv, run: source /home/vagrant/nova_env/bin/activate"
  become: false

- name: Run Python command inside nova virtualenv
  ansible.builtin.shell: |
    source /home/vagrant/nova_env/bin/activate
    python --version
  args:
    executable: /bin/bash
  become: false

- name: Clone nova repository
  ansible.builtin.git:
    repo: "{{ nova_repo }}"
    dest: "{{ nova_clone_dest }}"
    version: master
  become: false

- name: Clone python-novaclient repository
  ansible.builtin.git:
    repo: "{{ novaclient_repo }}"
    dest: "{{ novaclient_clone_dest }}"
    version: master
  become: false

- name: Install Nova requirements into virtualenv
  ansible.builtin.pip:
    requirements:
      - "{{ nova_clone_dest }}/requirements.txt"
      - "{{ nova_clone_dest }}/test-requirements.txt"
    virtualenv: "{{ nova_virtualenv }}"
    virtualenv_command: python3 -m virtualenv
    virtualenv_site_packages: yes
  become: false

- name: Install Nova service (editable mode)
  ansible.builtin.pip:
    name: "{{ nova_clone_dest }}"
    editable: true
    executable: pip3
  become: true

- name: Install Nova client (editable mode)
  ansible.builtin.pip:
    name: "{{ novaclient_clone_dest }}"
    editable: true
    executable: pip3
  become: true

- name: Create nova user in service project
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack user create nova --project service --password '{{ nova_password }}'
  args:
    executable: /bin/bash
  become: true

- name: Assign admin role to nova user in service project
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack role add --user nova --project service admin
  args:
    executable: /bin/bash
  become: true

- name: Register Nova service in Keystone
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack service create --name nova --description "OpenStack Compute" compute
  args:
    executable: /bin/bash
  become: true

- name: Create Nova public endpoint
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack endpoint create --region RegionOne compute public \
      http://{{ nova_api_host }}:8774/v2.1
  args:
    executable: /bin/bash
  become: true

- name: Create Nova admin endpoint
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack endpoint create --region RegionOne compute admin \
      http://{{ nova_api_host }}:8774/v2.1
  args:
    executable: /bin/bash
  become: true

- name: Create Nova internal endpoint
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack endpoint create --region RegionOne compute internal \
      http://{{ nova_api_host }}:8774/v2.1
  args:
    executable: /bin/bash
  become: true

- name: Run nova-manage api_db sync
  ansible.builtin.command: nova-manage api_db sync
  become: true

- name: Run nova-manage cell_v2 map_cell0
  ansible.builtin.command: nova-manage cell_v2 map_cell0
  become: true

- name: Create nova cell for cell1 (if not already created)
  ansible.builtin.shell: |
    nova-manage cell_v2 create_cell --name cell1 || true
  args:
    executable: /bin/bash
  become: true