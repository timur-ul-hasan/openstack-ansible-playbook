---
- name: Ensure 'glance' database exists (via Unix socket with sudo)
  community.mysql.mysql_db:
    name: glance
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create 'glance'@'localhost' user with full privileges
  community.mysql.mysql_user:
    name: glance
    host: localhost
    password: "{{ glance_db_password }}"
    priv: "glance.*:ALL"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create 'glance'@'%' user with full privileges
  community.mysql.mysql_user:
    name: glance
    host: "%"
    password: "{{ glance_db_password }}"
    priv: "glance.*:ALL"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock


- name: Ensure Glance user exists
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack user show glance >/dev/null 2>&1 \
      || openstack user create glance --project service --password '{{ glance_password }}'
  args:
    executable: /bin/bash

- name: Ensure Glance user has admin role on service project
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack role assignment list --user glance --project service --names \
      | grep -qw admin \
      || openstack role add --user glance --project service admin
  args:
    executable: /bin/bash

- name: Ensure Glance image is registered in Keystone
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack service show glance >/dev/null 2>&1 \
      || openstack service create --name glance \
          --description "OpenStack Image" image

- name: Create public endpoint for Glance (image service)
  openstack.cloud.endpoint:
    region: RegionOne
    service: glance
    interface: public
    endpoint_interface: public
    url: http://controller:9292
    auth:
      auth_url: http://controller:5000/v3
      username: admin
      password: "{{ os_admin_password }}"
      project_name: admin
      user_domain_name: Default
      project_domain_name: Default
  register: glance_public_ep

- name: Save the new endpoint ID
  set_fact:
    glance_public_endpoint_id: "{{ glance_public_ep.endpoint.id }}"

- name: Ensure internal endpoint for Glance service exists
  openstack.cloud.endpoint:
    region: RegionOne
    service: glance
    interface: internal
    endpoint_interface: internal
    url: http://controller:9292
    state: present
    auth: 
      auth_url: http://controller:5000/v3
      username: admin
      password: "{{ os_admin_password }}"
      project_name: admin
      user_domain_name: Default
      project_domain_name: Default
    
- name: Create Glance admin endpoint
  ansible.builtin.shell: |
    source /root/admin-openrc
    openstack endpoint create --region RegionOne image admin http://{{ glance_api_host }}:9292
  args:
    executable: /bin/bash
  become: true

- name: Install Glance packages
  apt:
    name: glance
    state: present

- name: Configure Glance database connection
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: database
    option: connection
    value: "mysql+pymysql://glance:{{ glance_db_password }}@controller/glance"
    backup: yes

- name: Configure Glance Keystone auth in glance-api.conf
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: www_authenticate_uri
    value: "http://controller:5000"
    backup: yes

- name: Configure Glance auth_url
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: auth_url
    value: "http://controller:5000"
    backup: yes

- name: Configure Glance memcached servers
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: memcached_servers
    value: "controller:11211"
    backup: yes

- name: Configure Glance auth_type and service project
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: auth_type
    value: "password"
    backup: yes

- name: Configure Glance project and user domains
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: project_domain_name
    value: "Default"
    backup: yes

# user_domain_name
- name: Configure Domain Name
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: user_domain_name
    value: "Default"
    backup: yes

- name: Configure Service Name
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: project_name
    value: "service"
    backup: yes


- name: Configure Glance user credentials
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: username
    value: "glance"
    backup: yes

- name: Configure Glance user password
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: keystone_authtoken
    option: password
    value: "{{ glance_service_password }}"
    backup: yes

- name: Configure Glance paste_deploy flavor
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: paste_deploy
    option: flavor
    value: "keystone"
    backup: yes

- name: Configure Glance filesystem store backend
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: DEFAULT
    option: enabled_backends
    value: "fs:file"
    backup: yes

- name: Configure Glance default backend
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: glance_store
    option: default_backend
    value: "fs"
    backup: yes

- name: Configure Glance filesystem data directory
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: fs
    option: filesystem_store_datadir
    value: "/var/lib/glance/images/"
    backup: yes

- name: Configure Glance unified limits (oslo_limit)
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: oslo_limit
    option: auth_url
    value: "http://controller:5000"
    backup: yes

- name: Configure Glance oslo_limit auth_type
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: oslo_limit
    option: auth_type
    value: "password"
    backup: yes

- name: Configure Glance oslo_limit credentials
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: oslo_limit
    option: username
    value: "glance"
    backup: yes

- name: Configure Glance oslo_limit password
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: oslo_limit
    option: password
    value: "{{ glance_service_password }}"
    backup: yes

- name: Configure Glance oslo_limit system scope
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: oslo_limit
    option: system_scope
    value: "all"
    backup: yes

- name: Configure Glance oslo_limit endpoint ID
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: oslo_limit
    option: endpoint_id
    value: "{{ glance_public_endpoint_id }}"
    backup: yes

- name: Configure Glance oslo_limit region name
  ansible.builtin.ini_file:
    path: /etc/glance/glance-api.conf
    section: oslo_limit
    option: region_name
    value: "RegionOne"
    backup: yes

- name: Populate the Glance database
  become: true
  ansible.builtin.shell: |
    su -s /bin/sh -c 'glance-manage db_sync' glance

- name: Restart glance-api service
  ansible.builtin.service:
    name: glance-api
    state: restarted
  become: true
